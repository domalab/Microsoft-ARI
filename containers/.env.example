# Azure Resource Inventory - Docker Compose Environment Configuration
# Copy this file to .env and customize for your environment
#
# Usage:
#   cp .env.example .env
#   # Edit .env with your values
#   docker-compose --profile interactive up ari

# =============================================================================
# CONTAINER CONFIGURATION
# =============================================================================

# ARI version/tag to use
ARI_VERSION=latest

# Build metadata (automatically set in CI/CD)
BUILD_DATE=
VCS_REF=

# Output directory on host (where reports will be saved)
ARI_OUTPUT_PATH=./output

# Azure configuration directory (optional)
# Uncomment to mount your local Azure CLI configuration
# AZURE_CONFIG_PATH=~/.azure

# =============================================================================
# AZURE AUTHENTICATION
# =============================================================================

# Service Principal Authentication (recommended for automation)
# Create a service principal with appropriate permissions:
# az ad sp create-for-rbac --name "ARI-ServicePrincipal" --role "Reader"
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
AZURE_TENANT_ID=

# =============================================================================
# ARI EXECUTION PARAMETERS
# =============================================================================

# Required: Azure tenant ID
ARI_TENANT_ID=

# Optional: Specific subscription (leave empty for all accessible subscriptions)
ARI_SUBSCRIPTION_ID=

# Optional: Specific resource group (leave empty for all resource groups)
ARI_RESOURCE_GROUP=

# Optional: Include resource tags in the report (true/false)
ARI_INCLUDE_TAGS=false

# Optional: Include Security Center data (true/false)
ARI_SECURITY_CENTER=false

# Optional: Skip Azure Advisory data collection (true/false)
ARI_SKIP_ADVISORY=false

# Optional: Custom report name (leave empty for default naming)
ARI_REPORT_NAME=

# Optional: Generate lightweight report without charts (true/false)
ARI_LITE=false

# =============================================================================
# MULTI-TENANT CONFIGURATION
# =============================================================================

# Path to tenants configuration file for multi-tenant scenarios
# Example format in tenants.json:
# [
#   {
#     "name": "Production",
#     "tenantId": "12345678-1234-1234-1234-123456789012",
#     "subscriptionId": "abcd-efgh-ijkl-mnop-qrstuvwxyz01",
#     "reportName": "Production-Inventory"
#   },
#   {
#     "name": "Development", 
#     "tenantId": "87654321-4321-4321-4321-210987654321",
#     "reportName": "Development-Inventory"
#   }
# ]
ARI_TENANTS_CONFIG=./tenants.json

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Single tenant with device login (interactive)
# ARI_TENANT_ID=12345678-1234-1234-1234-123456789012
# # Run with: docker-compose --profile interactive up ari

# Example 2: Service principal automation
# AZURE_CLIENT_ID=your-client-id
# AZURE_CLIENT_SECRET=your-client-secret
# AZURE_TENANT_ID=your-tenant-id
# ARI_TENANT_ID=your-tenant-id
# ARI_SUBSCRIPTION_ID=your-subscription-id
# ARI_INCLUDE_TAGS=true
# ARI_SECURITY_CENTER=true
# # Run with: docker-compose --profile automation up ari-automated

# Example 3: CI/CD pipeline
# AZURE_CLIENT_ID=your-ci-client-id
# AZURE_CLIENT_SECRET=your-ci-client-secret
# AZURE_TENANT_ID=your-tenant-id
# ARI_TENANT_ID=your-tenant-id
# ARI_REPORT_NAME=CI-Build-${BUILD_NUMBER}
# ARI_LITE=true
# # Run with: docker-compose --profile ci up ari-ci

# =============================================================================
# COMMON SCENARIOS
# =============================================================================

# Scenario 1: Basic inventory for a single subscription
# Set: ARI_TENANT_ID, ARI_SUBSCRIPTION_ID
# Run: docker-compose --profile interactive up ari

# Scenario 2: Complete inventory with all features
# Set: All authentication variables, ARI_TENANT_ID, ARI_INCLUDE_TAGS=true, ARI_SECURITY_CENTER=true
# Run: docker-compose --profile automation up ari-automated

# Scenario 3: Lightweight report for quick overview
# Set: ARI_TENANT_ID, ARI_LITE=true, ARI_SKIP_ADVISORY=true
# Run: docker-compose --profile interactive up ari

# Scenario 4: Development and testing
# Set: Development tenant credentials
# Run: docker-compose --profile development up ari-dev

# Scenario 5: Multi-tenant bulk processing
# Set: Authentication variables, create tenants.json
# Run: docker-compose --profile multitenant up ari-multitenant